##########################
##  Pyreverse UML Graphs
##  Reusable Workflow
##########################

on:
  workflow_call:
    inputs:
      run_policy:
        required: false
        type: string
        default: '2'
      branches:
        required: false
        type: string
        default: 'main, master, dev'
      source_code_targets:
        required: false
        type: string
        default: 'sheap'
      python_version:
        required: false
        type: string
        default: '3.12'
      artifacts_dir:
        required: false
        type: string
        default: 'dependency-graphs'

jobs:
  check_trigger_pyreverse:
    name: Should Draw UML Graphs?
    runs-on: ubuntu-latest
    if: always() && inputs.run_policy != '0'
    outputs:
      should_draw: ${{ steps.set_flag.outputs.should_draw }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - id: set_flag
        run: |
          SHOULD_DRAW=false
          BRANCH="${GITHUB_REF_NAME}"

          # Always run
          if [[ "${{ inputs.run_policy }}" == "1" ]]; then
            SHOULD_DRAW=true

          # Policy 2: long-living branch or tag
          elif [[ "${{ inputs.run_policy }}" == "2" ]]; then
            if [[ "${{ inputs.branches }}" == *"$BRANCH"* || "${GITHUB_REF}" == refs/tags/v* ]]; then
              SHOULD_DRAW=true
            fi

          # Policy 2 or 3: if source code changed
          elif [[ "${{ inputs.run_policy }}" == "2" || "${{ inputs.run_policy }}" == "3" ]]; then
            git diff --name-only HEAD^ HEAD > files.txt
            IFS=',' read -ra TARGETS <<< "${{ inputs.source_code_targets }}"
            while read file; do
              for target in "${TARGETS[@]}"; do
                if [[ "$file" == *"$target"* ]]; then
                  SHOULD_DRAW=true
                  break 2
                fi
              done
            done < files.txt
          fi

          echo "should_draw=$SHOULD_DRAW" >> "$GITHUB_OUTPUT"

  draw-uml-graphs:
    name: Draw UML Diagrams with Pyreverse
    needs: check_trigger_pyreverse
    if: needs.check_trigger_pyreverse.outputs.should_draw == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install tox and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Run pyreverse
        run: tox -e pyreverse -vv -s false

      - name: Upload Pyreverse Diagrams
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifacts_dir }}
          path: pydeps/
          if-no-files-found: warn
